{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_TYPE_BY_ALPHABET","SORT_TYPE_BY_LENGTH","App","useState","currentSort","setCurrentSort","isListReversed","setIsListReversed","isResetBtnShowed","goodsToShow","goodsList","sortType","reverse","sort","good1","good2","localeCompare","length","prepareGoodsToShow","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAwB,WACxBC,EAAsB,SA6BfC,EAAM,WACjB,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA4CF,oBAAS,GAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KAEMC,EAAmBF,GAAkBF,EAiBrCK,EAhDmB,SAACC,EAAWC,EAAUC,GAC/C,IAAIH,EAAW,YAAOC,GAuBtB,OArBIC,IACFF,EAAcA,EAAYI,MACxB,SAACC,EAAOC,GACN,OAAQJ,GAAYC,GAClB,KAAKZ,EACH,OAAOc,EAAME,cAAcD,GAE7B,KAAKd,EACH,OAAOa,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,OAMbL,GACFH,EAAYG,UAGPH,EAwBaS,CAClBnB,EACAK,EACAE,GAIF,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IACE,SACA,UACA,CACE,WAAYjB,IAAgBJ,IAIlCsB,QAAS,kBAAMjB,EAAeL,IAXhC,iCAgBA,wBACEoB,KAAK,SACLD,UACEE,IACE,SACA,aACA,CACE,WAAYjB,IAAgBH,IAIlCqB,QAAS,kBAAMjB,EAAeJ,IAXhC,4BAgBA,wBACEmB,KAAK,SACLD,UACEE,IACE,SACA,aACA,CACE,YAAaf,IAInBgB,QApEkB,WAEtBf,GADED,IAwDA,qBAgBCE,GACC,wBACEY,KAAK,SACLD,UAAU,4BACVG,QAnEW,WACnBjB,EAAe,IACfE,GAAkB,IA8DZ,sBAWJ,6BAEIE,EAAYc,KAAI,SAAAC,GAAI,OAClB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC5IpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a3dfa4fc.chunk.js","sourcesContent":["import cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_TYPE_BY_ALPHABET = 'alphabet';\nconst SORT_TYPE_BY_LENGTH = 'length';\n\nconst prepareGoodsToShow = (goodsList, sortType, reverse) => {\n  let goodsToShow = [...goodsList];\n\n  if (sortType) {\n    goodsToShow = goodsToShow.sort(\n      (good1, good2) => {\n        switch (sortType || reverse) {\n          case SORT_TYPE_BY_ALPHABET:\n            return good1.localeCompare(good2);\n\n          case SORT_TYPE_BY_LENGTH:\n            return good1.length - good2.length;\n\n          default:\n            return 0;\n        }\n      },\n    );\n  }\n\n  if (reverse) {\n    goodsToShow.reverse();\n  }\n\n  return goodsToShow;\n};\n\nexport const App = () => {\n  const [currentSort, setCurrentSort] = useState('');\n  const [isListReversed, setIsListReversed] = useState(false);\n\n  const isResetBtnShowed = isListReversed || currentSort;\n\n  const changeReverseList = () => {\n    if (isListReversed) {\n      setIsListReversed(false);\n\n      return;\n    }\n\n    setIsListReversed(true);\n  };\n\n  const resetSorting = () => {\n    setCurrentSort('');\n    setIsListReversed(false);\n  };\n\n  const goodsToShow = prepareGoodsToShow(\n    goodsFromServer,\n    currentSort,\n    isListReversed,\n\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button',\n              'is-info',\n              {\n                'is-light': currentSort !== SORT_TYPE_BY_ALPHABET,\n              },\n            )\n          }\n          onClick={() => setCurrentSort(SORT_TYPE_BY_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button',\n              'is-success',\n              {\n                'is-light': currentSort !== SORT_TYPE_BY_LENGTH,\n              },\n            )\n          }\n          onClick={() => setCurrentSort(SORT_TYPE_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button',\n              'is-warning',\n              {\n                'is-light': !isListReversed,\n              },\n            )\n          }\n          onClick={changeReverseList}\n        >\n          Reverse\n        </button>\n\n        {isResetBtnShowed && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetSorting}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        {\n          goodsToShow.map(good => (\n            <li data-cy=\"Good\" key={good}>{good}</li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}